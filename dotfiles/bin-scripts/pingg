#!/usr/bin/python3 -u

"""
Runs ping and detects drops in the output.

TODO: handle a situation when every mod 65k packet is let through and we
basically notice a drop everytime.

AUTHOR: Jacek Wielemborek, licensed under WTFPL.
"""

import sys
import subprocess
import signal

def b(s):
    if sys.version < "3":
        return s
    return bytes(s, "ascii")

class Pingg(object):

    def __init__(self, argv):
        self.last_seq = 0
        self.args = argv

    def handle_line(self, line):
        # figure out the current seq
        if not b("icmp_seq") in line:
            return

        seq_starts = line.find(b("icmp_seq=")) + len(b("icmp_seq="))
        seq_ends = line.find(b(" "), seq_starts)
        curr_seq = int(line[seq_starts:seq_ends])

        if curr_seq != self.last_seq + 1:
            # we've found the gap
            for i in range(curr_seq - self.last_seq - 1):
                before_seq = line[:line.find(b(" icmp_seq="))].decode()
                missing_seq = self.last_seq + i + 1
                to_print = ("%s icmp_seq=%d ttl=?? " +
                            "time=??? (DROP)") % (before_seq, missing_seq)
                print(to_print)
        self.last_seq = curr_seq

    def main(self):
        p = subprocess.Popen(["ping"] + self.args, stdout=subprocess.PIPE)
        while True:
            try:
                line = p.stdout.readline()
                if line == "":
                    break
                self.handle_line(line)
                print(line[:-1].decode('ascii'))
            except KeyboardInterrupt:
                p.send_signal(signal.SIGINT)
                print(p.stdout.read())
                break

if __name__ == "__main__":
    Pingg(sys.argv[1:]).main()
